{"version":3,"sources":["components/counter/counter.module.sass","components/button/button.module.sass","components/display/display.module.sass","components/button/index.tsx","components/button/button.tsx","components/input/index.tsx","components/input/input.tsx","components/display/index.tsx","components/display/display.tsx","components/counter/index.tsx","components/counter/counter.tsx","components/app/index.tsx","components/app/app.tsx","index.tsx"],"names":["module","exports","Button","props","disabled","onClick","changeCounter","resetCounter","changeDisplayStatus","className","css","btn","btn_right","disable","btn_disabled","children","UserInput","useState","error","setError","previous","counter","errorStyle","onUserInputChange","e","num","parseInt","currentTarget","value","isNaN","startCounter","maxCounter","setTimeout","checkOnNumber","undefined","checkLogic","changeMaxCounter","changeStartCounter","title","onChange","type","toUpperCase","Display","otherCounters","sass","display","Counter","settings","setSettings","currentCounter","disableInc","disableBtn","disableIncBtn","disableDisplay","btnArea","App","state","setState","useEffect","stateAsString","localStorage","getItem","newState","JSON","parse","clear","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.884a6298.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"counter_counter__x-8Nc\",\"counter__outer-border\":\"counter_counter__outer-border__2DSbI\",\"counter__inner-border\":\"counter_counter__inner-border__1DQiZ\",\"counter__display\":\"counter_counter__display__2LjFE\",\"counter__display_off\":\"counter_counter__display_off__Wq3GG\",\"counter__btn-area\":\"counter_counter__btn-area__aDW4u\",\"counter__btn-area_disabled\":\"counter_counter__btn-area_disabled__3gDF9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"button_btn__2dQp9\",\"btn_right\":\"button_btn_right__1TMfV\",\"btn_disabled\":\"button_btn_disabled___KgWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"display\":\"display_display__1M1Ls\",\"display__block\":\"display_display__block__3ZqtQ\"};","import Button from \"./button\";\r\n\r\nexport default Button;","import React from \"react\";\r\n\r\nimport css from \"./button.module.sass\";\r\n\r\ntype ButtonType = {\r\n    changeCounter?: (value: number) => void,\r\n    disable: string,\r\n    resetCounter?: () => void,\r\n    changeDisplayStatus?: () => void,\r\n    disabled?: boolean,\r\n}\r\n\r\nconst Button: React.FC<ButtonType> = (props) => {\r\n    return (\r\n        <button disabled={props.disabled}\r\n            onClick={() => {\r\n            if (props.changeCounter) {\r\n                props.changeCounter(1);\r\n            }\r\n            if (props.resetCounter) {\r\n                props.resetCounter();\r\n            }\r\n            if (props.changeDisplayStatus) {\r\n                props.changeDisplayStatus();\r\n            }\r\n        }} className={`${css.btn} ${css.btn_right} ${props.disable && css.btn_disabled}`}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button;","import UserInput from \"./input\";\r\n\r\nexport default UserInput;","import React, {useState} from \"react\";\r\nimport {ChangeCounter} from \"../counter/counter\";\r\n\r\ntype UserInputType = {\r\n    title: string,\r\n    maxCounter?: number,\r\n    startCounter?: number,\r\n    counter: number,\r\n    changeMaxCounter?: ChangeCounter,\r\n    changeStartCounter?: ChangeCounter,\r\n}\r\n\r\nconst UserInput: React.FC<UserInputType> = (props) => {\r\n    const [error, setError] = useState<boolean>(false);\r\n\r\n    const errorMsg = \"Invalid input\";\r\n    let previous = props.counter;\r\n    const errorStyle = error ? \"user-input__mod_error\" : \"\"\r\n\r\n    const checkOnNumber = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let num = parseInt(e.currentTarget.value);\r\n        if (isNaN(num) || num < 0 || num === props.startCounter || num === props.maxCounter) {\r\n            setError(true);\r\n            setTimeout(() => setError(false), 3000);\r\n            return previous;\r\n        } else {\r\n            return num\r\n        }\r\n    }\r\n\r\n    const checkLogic = (num: number) => {\r\n        if (props.maxCounter === undefined) {\r\n            if (props.startCounter === (props.counter - 1)) {\r\n                setError(true);\r\n                setTimeout(() => setError(false), 3000);\r\n                return (previous + 1);\r\n            }\r\n        }\r\n        if (props.startCounter === undefined) {\r\n            if (props.maxCounter === (props.counter + 1)) {\r\n                setError(true);\r\n                setTimeout(() => setError(false), 3000);\r\n                return (previous - 1);\r\n            }\r\n        }\r\n        return num;\r\n    }\r\n\r\n    const onUserInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let num = checkOnNumber(e);\r\n        num = checkLogic(num);\r\n        if (!error) {\r\n            props.changeMaxCounter && props.changeMaxCounter(num);\r\n            props.changeStartCounter && props.changeStartCounter(num);\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"user-input\">\r\n            <label>{props.title}</label>\r\n            <div className=\"user-input__mod\">\r\n                <input value={props.counter} onChange={(e) => onUserInputChange(e)} type=\"number\"\r\n                       className={errorStyle}/>\r\n                {error && <span>{errorMsg.toUpperCase()}</span>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserInput;\r\n\r\n\r\n","import Display from \"./display\";\r\n\r\nexport default Display;","import React from \"react\";\r\nimport UserInput from \"../input\";\r\nimport {ChangeCounter} from \"../counter/counter\";\r\n\r\nimport sass from \"./display.module.sass\";\r\n\r\ntype DisplayType = {\r\n    otherCounters?: any,\r\n    changeMaxCounter: ChangeCounter,\r\n    changeStartCounter: ChangeCounter,\r\n}\r\n\r\nconst Display: React.FC<DisplayType> = (props) => {\r\n    const {maxCounter, startCounter, changeMaxCounter, changeStartCounter} = props.otherCounters;\r\n    // console.log(\"in display\", changeMaxCounter);\r\n    return (\r\n        <div className={sass.display}>\r\n            <div className={sass[\"display__block\"]}>\r\n                <UserInput changeMaxCounter={changeMaxCounter} title={\"max value : \"} counter={maxCounter} startCounter={startCounter}/>\r\n            </div>\r\n            <div className={sass[\"display__block\"]}>\r\n                <UserInput changeStartCounter={changeStartCounter} title={\"start value : \"} counter={startCounter} maxCounter={maxCounter}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import Counter from \"./counter\";\r\n\r\nexport default Counter;","import React, {useState} from \"react\";\r\n\r\nimport css from \"./counter.module.sass\";\r\nimport sass from '../button/button.module.sass';\r\n\r\nimport Button from \"../button\";\r\nimport Display from \"../display\";\r\n\r\nexport type ChangeCounter = (value: number) => void\r\n\r\ntype CounterType = {\r\n    //OR PUSH HERE FULL STATE ???\r\n    maxCounter: number,\r\n    startCounter: number,\r\n    currentCounter: number,\r\n    changeCounter: ChangeCounter,\r\n    resetCounter: () => void,\r\n    changeMaxCounter: ChangeCounter,\r\n    changeStartCounter: ChangeCounter,\r\n}\r\n\r\nconst Counter: React.FC<CounterType> = (props) => {\r\n    const [settings, setSettings] = useState<boolean>(false);\r\n\r\n    const changeDisplayStatus = () => {\r\n        setSettings(!settings);\r\n    }\r\n\r\n    // console.log(sass);\r\n\r\n    const {currentCounter, changeCounter, resetCounter, ...otherCounters} = props;\r\n    // console.log(props.startCounter, props.currentCounter, props.maxCounter);\r\n    let disable = currentCounter === props.startCounter ? `${sass.btn_disabled}` : \"\";\r\n    let disableInc = currentCounter === props.maxCounter ? `${sass.btn_disabled}` : \"\";\r\n    let disableBtn = currentCounter === props.startCounter;\r\n    let disableIncBtn = currentCounter === props.maxCounter;\r\n    let disableDisplay = currentCounter === props.maxCounter ? `${css[\"counter__display\"]} ${css[\"counter__display_off\"]}` : `${css[\"counter__display\"]}`;\r\n    let btnArea = settings ? `${css[\"counter__btn-area\"]} ${css[\"counter__btn-area_disabled\"]}` : `${css[\"counter__btn-area\"]}`;\r\n\r\n    return (\r\n        <div className={css.counter}>\r\n            <div className={css[\"counter__outer-border\"]}>\r\n                <div className={css[\"counter__inner-border\"]}>\r\n                    {!settings && <div className={disableDisplay}>{currentCounter}</div>}\r\n                    {settings &&\r\n                    <Display changeStartCounter={props.changeStartCounter} changeMaxCounter={props.changeMaxCounter}\r\n                             otherCounters={otherCounters}/>}\r\n                </div>\r\n                <div className={`${btnArea}`}>\r\n                    {!settings &&\r\n                    <Button changeCounter={changeCounter} disabled={disableIncBtn} disable={disableInc}>INC</Button>}\r\n                    {!settings &&\r\n                    <Button resetCounter={resetCounter} disabled={disableBtn} disable={disable}>RES</Button>}\r\n                    <Button changeDisplayStatus={changeDisplayStatus} disable={\"\"}>SET</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Counter;","import App from \"./app\";\r\n\r\nexport default App;","import React, {useEffect, useState} from \"react\";\r\n\r\nimport Counter from \"../counter\";\r\n\r\ntype StateType = {\r\n    [key: string]: number,\r\n}\r\n\r\nconst maxCounter = \"max_Counter\";\r\nconst startCounter = \"start_Counter\";\r\nconst currentCounter = \"current_Counter\";\r\nconst keyToLocalstorage = \"state\";\r\n\r\nconst App = () => {\r\n    let [state, setState] = useState<StateType>({\r\n        [maxCounter]: 5,\r\n        [startCounter]: 0,\r\n        [currentCounter]: 0,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const stateAsString = localStorage.getItem(keyToLocalstorage)\r\n        // console.log(stateAsString);\r\n        if (stateAsString !== null) {\r\n            const newState = JSON.parse(stateAsString!)\r\n            setState(newState);\r\n            localStorage.clear()\r\n        }\r\n    }, []);\r\n\r\n    const changeCounter = (value: number) => {\r\n        state[currentCounter] += value;\r\n        setState({...state});\r\n    }\r\n\r\n    const changeMaxCounter = (value: number) => {\r\n        state[maxCounter] = value;\r\n        setState({...state});\r\n    }\r\n\r\n    const changeStartCounter = (value: number) => {\r\n        state[startCounter] = value;\r\n        state[currentCounter] = value;\r\n        setState({...state});\r\n    }\r\n\r\n    const resetCounter = () => {\r\n        state[currentCounter] = state[startCounter];\r\n        setState({...state});\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(\"update\");\r\n        localStorage.setItem(keyToLocalstorage, JSON.stringify(state));\r\n    }, [state]);\r\n\r\n    return (\r\n        <div className=\"container_fluid\">\r\n            <Counter maxCounter={state[maxCounter]} startCounter={state[startCounter]}\r\n                     currentCounter={state[currentCounter]}\r\n                     changeCounter={changeCounter} resetCounter={resetCounter} changeMaxCounter={changeMaxCounter}\r\n                     changeStartCounter={changeStartCounter}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"../src/sass/style.sass\";\nimport App from \"./components/app\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}